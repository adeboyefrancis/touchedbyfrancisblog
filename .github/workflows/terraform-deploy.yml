name: Terraform Deployment and Blog Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_CLOUD_API_TOKEN: ${{ secrets.TF_CLOUD_API_TOKEN }}
  AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE }}
  TF_HOSTNAME: ${{ secrets.TF_HOSTNAME }}
  

jobs:
  infra-deploy:
    runs-on: ubuntu-latest
    name: AWS Infrastructure Provisioning
    defaults:
      run:
        working-directory: infra
    outputs:
      s3_bucket: ${{ steps.tf_out.outputs.s3 }}
      cf_id: ${{ steps.tf_out.outputs.cfid }}
      cf_domain_name: ${{ steps.tf_out.outputs.cfdomain }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.7"
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_API_TOKEN }}
          cli_config_credentials_hostname: ${{ secrets.TF_HOSTNAME }}
          terraform_wrapper: true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply --auto-approve

      - name: Terraform Output (JSON)
        id: tf_out
        run: terraform output -json > terraform_output.json

  build-job:
    runs-on: ubuntu-latest
    name: Build Blog
    needs: [infra-deploy]
    steps:
      - name: Checkout Repository (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.135.0'
          extended: true

      - name: Build the Blog
        run: hugo

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tech-blog
          path: public/*

  deploy-job:
    runs-on: ubuntu-latest
    name: Deploy Blog
    needs: [infra-deploy, build-job]
    env:
      AWS_BUCKET_NAME: ${{ needs.infra-deploy.outputs.s3_bucket }}
      CFD_ID: ${{ needs.infra-deploy.outputs.cf_id }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: tech-blog

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync Blog Content to S3 Bucket
        run: |
          if ! aws s3 sync ./public/ s3://${{ env.AWS_BUCKET_NAME }} --delete; then
            echo "S3 sync failed"
            exit 1
          fi

      - name: Invalidate CloudFront Cache
        run: |
          if ! aws cloudfront create-invalidation --distribution-id ${{ env.CFD_ID }} --paths "/*"; then
            echo "CloudFront invalidation failed"
            exit 1
          fi
